{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Return": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Create sub path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        [
          {
            "node": "Return",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Config",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create sub path": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Config": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-20T22:20:15.972Z",
  "id": "rcz5QcmaN6M5fg7s",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "RESPALDO DIARIO N8N",
  "nodes": [
    {
      "parameters": {},
      "id": "ea3d4ea8-02ba-49e3-9495-d78ee5a2c342",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -1136,
        -48
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "e429942b-e6e2-43ca-b6c1-3fdaa223d41f",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -832,
        32
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "isnWFzgU8ZjLwPAE",
          "name": "N8N BEONLINE"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "3ae1b263-54c5-4c69-9a0d-c366305b0214",
      "name": "Return",
      "type": "n8n-nodes-base.set",
      "position": [
        1184,
        208
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "4faa2137-ba47-4222-b9a8-63e3b1c5d254",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        80,
        -256
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "6c335b29-570a-4fa0-b7ee-b05896d478fc",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        -160,
        -240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "24da8892-175e-498d-8400-7b797c251607",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        -160,
        32
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "id": "e00cf574-1996-4d7c-8ce0-f802a78bfbc5",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        48,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "b8f83492-daee-4f65-8ed1-1c479fac7a6a",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        448,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "0bf35fde-67a0-435f-af80-f260b604211f",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        672,
        -144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "6e477ba7-0d64-4cd4-8f5f-6764311c702c",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        672,
        32
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "61d49a82-e62c-4ab4-8699-f04a31073199",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        672,
        224
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}{{ $json.subPath }}{{$('Loop Over Items').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').first().json.name}} ({{$json.github_status}})"
      },
      "id": "bbc30cea-7fc9-45c5-9e0a-13defc01d650",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        896,
        224
      ],
      "typeVersion": 1,
      "webhookId": "5990f689-a687-4528-823e-42321dec2233",
      "credentials": {
        "githubApi": {
          "id": "vkaiGincD9gymGMI",
          "name": "github andres"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}{{ $json.subPath }}{{$('Loop Over Items').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Loop Over Items').first().json.name}} ({{$json.github_status}})"
      },
      "id": "30e7acaa-c076-41b9-9665-8fda8c9bf72a",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        896,
        32
      ],
      "typeVersion": 1,
      "webhookId": "ce008e9b-37e5-4693-9333-29fcfd89c768",
      "credentials": {
        "githubApi": {
          "id": "vkaiGincD9gymGMI",
          "name": "github andres"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "7a0d1e3f-c0ab-4942-a575-fdd569fd3237",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -640,
        32
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 1
            }
          ]
        }
      },
      "id": "db1fe1e6-ce6f-430c-81e5-b549f3fe49a1",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1136,
        112
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dae43d3b-56e5-4098-b602-862ebf5cd073",
              "name": "subPath",
              "type": "string",
              "value": "={{ $('Loop Over Items').first().json.createdAt.split('-')[0] }}/{{ $('Loop Over Items').first().json.createdAt.split('-')[1] }}/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "f9dd7b2e-0c52-44c9-b423-6a10705cbd10",
      "name": "Create sub path",
      "type": "n8n-nodes-base.set",
      "position": [
        240,
        32
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_owner }}",
          "mode": ""
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Config').first().json.repo_name }}",
          "mode": ""
        },
        "filePath": "={{ $('Config').first().json.repo_path }}{{ $('Loop Over Items').first().json.createdAt.split('-')[0] }}/{{ $('Loop Over Items').first().json.createdAt.split('-')[1] }}/{{$json.id}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "0174826b-39a5-4140-950c-5b79740692d3",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        -352,
        -240
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "webhookId": "222348cc-08fd-4dd8-870d-6d38c5226041",
      "credentials": {
        "githubApi": {
          "id": "vkaiGincD9gymGMI",
          "name": "github andres"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8f6d1741-772f-462a-811f-4c334185e4f0",
              "name": "repo_owner",
              "type": "string",
              "value": "=infoandresrendoncol"
            },
            {
              "id": "8cac215c-4fd7-422f-9fd2-6b2d1e5e0383",
              "name": "repo_name",
              "type": "string",
              "value": "=backupn8n"
            },
            {
              "id": "eee305e9-4164-462a-86bd-80f0d58a31ae",
              "name": "repo_path",
              "type": "string",
              "value": "=backup/"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "8e39e2d3-678f-4f04-a773-e4f8ff09bb39",
      "name": "Config",
      "type": "n8n-nodes-base.set",
      "position": [
        -352,
        48
      ],
      "typeVersion": 3.4
    }
  ],
  "pinData": {
    "On clicking 'execute'": [
      {
        "json": {}
      }
    ]
  },
  "repo_name": "backupn8n",
  "repo_owner": "infoandresrendoncol",
  "repo_path": "backup/",
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-20T22:20:15.975Z",
      "updatedAt": "2025-08-20T22:20:15.975Z",
      "role": "workflow:owner",
      "workflowId": "rcz5QcmaN6M5fg7s",
      "projectId": "4KmSbENK2cGxsjaf"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-20T22:51:53.000Z",
  "versionId": "8dc3a7c3-25c2-4fa3-b4e1-058f97d78930"
}